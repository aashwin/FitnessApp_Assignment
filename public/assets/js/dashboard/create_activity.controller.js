"use strict";!function(){var e=angular.module("app");e.controller("createActivityController",["userService","Notification","activityService","$location","$scope","$routeParams",function(e,r,a,t,o,l){o.entryMode=0,o.errored=!1,"manual"==l.method?o.entryMode=1:"gpx"==l.method&&(o.entryMode=2),o.activityTypes=[{value:1,label:"Run"},{value:2,label:"Walk"},{value:3,label:"Cycle"}],o.measurementTypes=[{value:1609.34,label:"Miles"},{value:1e3,label:"KM"},{value:1,label:"Meters"}];var n=new Date;n.setHours(0),n.setMinutes(0),n.setSeconds(0),o.manualEntryModel={errors:[],activityType:o.activityTypes[0],distanceType:o.measurementTypes[0],dateTimeObj:moment(n)},o.gpxUploadModel={errors:[],activityType:o.activityTypes[0]},o.addActivityManual=function(){o.manualEntryModel.errors=[],o.manualEntryModel.dateTime=Math.round(o.manualEntryModel.dateTimeObj.valueOf()/1e3),a.create(o.manualEntryModel).then(function(e){e.success?(o.errored=!1,t.path("/app/activity/"+e.object._id),r.success({message:"Successfully created activity",delay:5e3})):(o.manualEntryModel.errors=e.errors,o.errored=!0)},function(e){o.manualEntryModel.errors=e.errors,o.errored=!0})},o.uploadPercent=null,o.uploadGpx=function(){return o.gpxUpload.$invalid?(o.gpxUploadModel.errors=["Fix the highlighted issues before continuing..."],void(o.errored=!0)):(o.gpxUploadModel.errors=[],void a.createUploader(o.gpxUploadModel).then(function(e){o.uploadPercent=null,e.success?(o.errored=!1,t.path("/app/activity/"+e.object._id),r.success({message:"Successfully created activity",delay:5e3})):(o.gpxUploadModel.errors=e.errors,o.errored=!0)},function(e){o.gpxUploadModel.errors=["Something went wrong, try again!"],o.errored=!0},function(e){o.uploadPercent=e+"%"}))}}])}();