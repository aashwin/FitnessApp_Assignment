"use strict";!function(){var e=angular.module("app");e.controller("createActivityController",["userService","Notification","activityService","$location","$scope","$routeParams",function(e,t,a,r,o,n){o.entryMode=0,o.errored=!1,o.edit_mode=!1,n.edit_mode&&"edit"==n.edit_mode?(o.edit_mode=!0,o.entryMode=1):"manual"==n.method?o.entryMode=1:"gpx"==n.method&&(o.entryMode=2),o.activityTypes=[{value:0,label:"Run"},{value:1,label:"Walk"},{value:2,label:"Cycle"}],o.measurementTypes=[{value:1609.34,label:"Miles"},{value:1e3,label:"KM"},{value:1,label:"Meters"}];var i=new Date;i.setHours(0),i.setMinutes(0),i.setSeconds(0),o.manualEntryModel={errors:[],activityType:o.activityTypes[0],distanceType:o.measurementTypes[0],dateTimeObj:moment(i)},o.edit_mode?(a.get(n.id).then(function(t){if(!t.success||!t.object)return void r.path("/app/404/");if(t.object.createdBy._id!==o.currentUser._id)return void r.path("/app/404/");if(t.object.activityType){for(var a=0;a<o.activityTypes.length;a++)if(t.object.activityType==o.activityTypes[a].value){t.object.activityType=o.activityTypes[a];break}}else t.object.activityType=o.activityTypes[0];t.object.distance=t.object.distanceInMeters/1e3,t.object.distanceType=o.measurementTypes[1],t.object.dateTimeObj=moment(new Date(1e3*t.object.dateTime)),t.object.elevation=t.object.elevationInMeters,t.object.shared_with_list=t.object.shared_with;var n=t.object.durationInSeconds;n&&n>0&&(t.object.durationH=Math.floor(n/3600),n%=3600,t.object.durationM=Math.floor(n/60),n%=60,t.object.durationS=Math.round(n)),delete t.object.distanceInMeters,delete t.object.elevationInMeters,delete t.object.dateTime,delete t.object.durationInSeconds,delete t.object.shared_with,o.manualEntryModel=t.object,o.manualEntryModel.shared_with="";for(var i=0;i<o.manualEntryModel.shared_with_list.length;i++)e.get(o.manualEntryModel.shared_with_list[i]).then(function(e){e.success&&e.object&&(o.manualEntryModel.shared_with.length>0&&(o.manualEntryModel.shared_with+=", "),o.manualEntryModel.shared_with+=e.object.username)})},function(){r.path("/app/404/")}),o.addActivityManual=function(){o.manualEntryModel.errors=[],o.manualEntryModel.dateTime=Math.round(o.manualEntryModel.dateTimeObj.valueOf()/1e3),a.update(o.manualEntryModel._id,o.manualEntryModel).then(function(e){e.success?(o.errored=!1,r.path("/app/activity/"+e.object._id),t.success({message:"Successfully updated activity",delay:5e3})):(o.manualEntryModel.errors=e.errors,o.errored=!0)},function(e){o.manualEntryModel.errors=e.errors,o.errored=!0})}):(o.gpxUploadModel={errors:[],activityType:o.activityTypes[0]},o.addActivityManual=function(){o.manualEntryModel.errors=[],o.manualEntryModel.dateTime=Math.round(o.manualEntryModel.dateTimeObj.valueOf()/1e3),a.create(o.manualEntryModel).then(function(e){e.success?(o.errored=!1,r.path("/app/activity/"+e.object._id),t.success({message:"Successfully created activity",delay:5e3})):(o.manualEntryModel.errors=e.errors,o.errored=!0)},function(e){o.manualEntryModel.errors=e.errors,o.errored=!0})},o.uploadPercent=null,o.uploadGpx=function(){return o.gpxUpload.$invalid?(o.gpxUploadModel.errors=["Fix the highlighted issues before continuing..."],void(o.errored=!0)):(o.gpxUploadModel.errors=[],void a.createUploader(o.gpxUploadModel).then(function(e){o.uploadPercent=null,e.success?(o.errored=!1,r.path("/app/activity/"+e.object._id),t.success({message:"Successfully created activity",delay:5e3})):(o.gpxUploadModel.errors=e.errors,o.errored=!0)},function(e){o.gpxUploadModel.errors=["Something went wrong, try again!"],o.errored=!0},function(e){o.uploadPercent=e+"%"}))})}])}();